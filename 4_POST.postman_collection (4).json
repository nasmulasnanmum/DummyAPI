{
	"info": {
		"_postman_id": "1896b69b-e0df-40f5-a9c5-fc267a87fc25",
		"name": "Lesson4_POST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21909379"
	},
	"item": [
		{
			"name": "GetPostList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body data is array\", function () {\r",
							"    pm.expect(jsonData.data).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].id is string\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].image is string\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].likes is string\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].tags is array\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].text is string\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].publishDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].title is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.title).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].firstName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].lastName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].picture is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.picture).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].link is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[19].id is string\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[20] is undefined\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check limit is 20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check page is 0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body total is number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreatePost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"postID\", jsonData.id);\r",
							"\r",
							"pm.collectionVariables.set(\"userID\", jsonData.owner.id);\r",
							"\r",
							"pm.test(\"Check body likes\", function () {\r",
							"    pm.expect(jsonData.likes).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body title\", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body tags is array\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body text\", function () {\r",
							"    pm.expect(jsonData.text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "        {\r\n            \"image\": \"{{$randomImageUrl}}\",\r\n            \"likes\": 0,\r\n            \"tags\": [\r\n                \"animal\",\r\n                \"dog\",\r\n                \"golden retriever\"\r\n            ],\r\n            \"text\": \"{{$randomPhrase}}\",\r\n            \"owner\": \"60d0fe4f5311236168a109ca\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/post/create",
					"host": [
						"{{host}}"
					],
					"path": [
						"post",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPostListByUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body data is array\", function () {\r",
							"    pm.expect(jsonData.data).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].id is string\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].image is string\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].likes is string\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].tags is array\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].text is string\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].publishDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].title is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.title).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].firstName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].lastName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].picture is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.picture).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].link is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[19].id is string\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[20] is undefined\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check limit is 20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check page is 0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body total is number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/user/{{userID}}/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"user",
						"{{userID}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPostListByTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body data is array\", function () {\r",
							"    pm.expect(jsonData.data).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].id is string\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].image is string\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].likes is string\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.a('number');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].tags is array\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].text is string\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].publishDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].title is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.title).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].firstName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].lastName is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].picture is string\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.picture).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].link is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].link).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[19].id is string\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[20] is undefined\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.a('undefined');\r",
							"});\r",
							"\r",
							"pm.test(\"Check limit is 20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check page is 0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body total is number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/tag/{{tags}}/post",
					"host": [
						"{{host}}"
					],
					"path": [
						"tag",
						"{{tags}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPostListByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body likes\", function () {\r",
							"    pm.expect(jsonData.likes).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body title\", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body tags is array\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body text\", function () {\r",
							"    pm.expect(jsonData.text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/post/{{postID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"post",
						"{{postID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdatePost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body likes\", function () {\r",
							"    pm.expect(jsonData.likes).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body title\", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body firstName\", function () {\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body array tags\", function () {\r",
							"    pm.expect([\"animal\", \"dog\", \"golden retriever\"]).to.be.an('array').that.includes(\"animal\", \"dog\", \"golden retriever\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body id\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image\", function () {\r",
							"    pm.expect(jsonData.image).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body text\", function () {\r",
							"    pm.expect(jsonData.text).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"Konchai\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/post/{{postID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"post",
						"{{postID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is okay\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"postID\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/post/{{postID}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"post",
						"{{postID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{app-id}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postID",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		},
		{
			"key": "tags",
			"value": ""
		}
	]
}